{"version":3,"sources":["LoadingScreen/js/LoadingScreen.js","Ranges/RangeDates/js/RangeDates.js","Ranges/Search/correctFilter.js","Ranges/Search/js/Search.js","Tables/TableByEpmployees/BodyOfTable/js/BodyOfTable.js","Tables/TableByEpmployees/HeadOfTable/js/HeadOfTable.js","Tables/IntitializeMyTable.js","infoPage/js/InfoPage.js","Tools/tools.js","LabelLog-in/OAuth/js/OAuth.js","LabelLog-in/LogInForm/jss/LogInForm.js","MessagesInfo/UnAuthorized/js/UnAuthorized.js","Authorize.js","index.js"],"names":["LoadingScreen","loadingMacket","useState","setLoading","counter","setCounter","useEffect","setTimeout","class","RangeDates","props","onSubmitRange","a","datas","accessToken","dates","start","document","getElementById","value","end","invoke","then","promise","setUsersInfo","id","onSubmit","event","preventDefault","type","name","label","defaultValue","onChange","setDates","target","onClick","correctFilter","listOfUsers","search","searchLowCase","removeSpace","toLowerCase","exactNames","isfullNameExist","map","user","userLowCase","accountName","push","exactContainer","i","length","j","val","upgraded","undefined","Search","setListOfUsers","usersInfo","placeholder","onInput","BodyOfTable","className","src","macket","accountAvatar","numOfComments","numOfCommits","numOfpullRequests","HeadOfTable","InitializedMyTable","index","InfoPage","setSearch","date","Date","year","getFullYear","month","getMonth","getDates","OAuth","onSubmitAuthorize","email","password","basicToken","Base64","btoa","setUserBasicToken","LogInForm","UnAuthorized","setLabel","Page","localStorage","getItem","userBasicToken","status","setStatus","setAccessToken","res","code","setItem","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2f69152f.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './../css/LoadingScreen.css'\nfunction LoadingScreen(){\n    let loadingMacket = [\n        'Loading.',\n        'Loading..',\n        'Loading...'\n    ];\n    const[loading, setLoading] = useState(loadingMacket[0]);\n    const[counter, setCounter] = useState(0);\n\n\n\n    useEffect(() => {\n        if(counter > 2 ){\n            setCounter(0);\n        }\n        \n        setLoading(loadingMacket[counter]);\n        setTimeout(setCounter, 1000, (counter + 1));\n    }, [counter]);\n        \n     \n    return (\n\n        <div class=\"loader-mask\">\n            <div class=\"loader\"></div>\n        </div>\n    )\n}\n\nexport default LoadingScreen;","import { invoke } from '@forge/bridge';\nimport React from 'react';\nimport LoadingScreen from '../../../LoadingScreen/js/LoadingScreen';\n\nimport './../css/rangeDates.css'\n\nfunction RangeDates(props){\n\n    const onSubmitRange = async () => {\n        \n        let datas = {\n            accessToken: props.accessToken,\n            dates: {\n                start: document.getElementById('start').value,\n                end:  document.getElementById('end').value\n            }\n        }\n\n        invoke('GetInfo', datas).then(promise => {\n            props.setUsersInfo(promise);\n        });\n    }\n\n    function onSubmit(event){\n        event.preventDefault();\n    }\n\n    return (\n\n        <form id='rangeForm'onSubmit={onSubmit}>\n            <input id=\"start\" type='date' name=\"start\" label=\"Start Date\" defaultValue={props.dates.start} onChange={event => props.setDates(event.target.value)}/>\n            <p></p>\n            <input id=\"end\" type='date' name=\"end\" label=\"End Date\" defaultValue={props.dates.end} onChange={event => setDates(event.target.value)}/>\n            <p></p>\n            <button id='range-button' onClick={onSubmitRange} >submit</button>\n        </ form>\n    );\n}\n\nexport default RangeDates;","\nexport function correctFilter(listOfUsers, search){\n\n    let searchLowCase = removeSpace(search.toLowerCase());\n\n    let exactNames = [];\n    let aboutNames = [];\n\n    let users = null;\n\n    let isfullNameExist = false;\n    \n    listOfUsers.map(user => {\n\n        let userLowCase = removeSpace(user.accountName.toLowerCase());\n\n        if(isfullNameExist === true){\n            return null;\n        }\n\n        if(user.accountName === search && isfullNameExist === false){\n            exactNames.push(user);\n            isfullNameExist = true;\n            return null;\n        }\n\n        let exactContainer = '';\n        let aboutContainer = '';\n        let i = 0;\n\n        while(i !== user.accountName.length){\n\n            let j = 0;\n\n            while(j <= search.length){\n                \n                if(userLowCase[i] === searchLowCase[j] && i === j){\n\n                    exactContainer = exactContainer + userLowCase[i];\n                }\n\n                if(userLowCase[i] === searchLowCase[j] && i !== j){\n\n                    aboutContainer = aboutContainer + userLowCase[i];\n                }\n\n                j++;\n            }\n\n           i++\n        }\n\n        if(exactContainer.length === search.length){\n            exactNames.push(user);\n        }\n     \n    });\n    \n    return exactNames;\n}\n\n\nfunction removeSpace(val){\n    if(val.length === 0 ){\n        return val;\n    }\n\n    let i = 0;\n    \n    let upgraded = '';\n    \n    while(i <= val.length){\n        \n        if(val[i] !== ' ' && val[i] !== undefined){\n            upgraded = upgraded + val[i];\n        }\n        i++;\n    }\n    \n    return upgraded;\n}","import React, { useState } from 'react';\nimport { correctFilter } from '../correctFilter';\nimport './../css/Search.css'\n\nfunction Search(props){\n    \n    async function search(){\n\n       \n        let search = document.getElementById('searchEmployee').value;\n        \n        if(search.length === 0){\n            props.setListOfUsers(props.usersInfo);\n            return;\n        }\n\n        props.setListOfUsers(correctFilter(props.usersInfo, search));\n    }\n\n    return(\n        <input id=\"searchEmployee\" label=\"Search Employee\" name=\"name\" placeholder='Search' onInput={search}/>\n    )\n}\n\n\nexport default Search;","import React from 'react';\nimport './../css/BodyOfTable.css'\n\nexport function BodyOfTable(props){\n    \n    return (\n        <tr className='body'>\n             <td>\n                <img className='image' src={props.macket.accountAvatar}></img>\n            </td>\n            <td className='accountName'>{props.macket.accountName}</td>\n            <td className='numOfComments'>{props.macket.numOfComments}</td>\n            <td className='numOfCommits'>{props.macket.numOfCommits}</td>\n            <td className='numOfpullRequests'>{props.macket.numOfpullRequests}</td>\n        </tr>\n    ) \n}","import React from 'react';\n\nimport './../css/HeadOfTable.css'\n\nexport function HeadOfTable(){\n\n    return(\n        <tr id='head'>\n            <th className=''></th>\n            <th className='name'><text>Name</text></th>\n            <th className='jira_comments'>Jira comments</th>\n            <th className='bitBucket_Commits'>BitBucket Commits</th>\n            <th className='bitBucket_PullRequests'>BitBucket PullRequests</th>\n        </tr>\n    );\n}","import React from 'react';\nimport { BodyOfTable } from './TableByEpmployees/BodyOfTable/js/BodyOfTable';\nimport { HeadOfTable } from './TableByEpmployees/HeadOfTable/js/HeadOfTable'\nimport './InitializeMyTable.css'\n\nexport function InitializedMyTable(props){\n    return (\n        <table className=\"table\">\n            <HeadOfTable />\n                {props.macket.map((macket, index) => (\n                    <BodyOfTable macket={macket} index={index}/>  \n            ))}\n        </table>\n    )\n}","import { invoke } from \"@forge/bridge\";\nimport { useEffect, useState } from \"react\";\nimport LoadingScreen from \"../../LoadingScreen/js/LoadingScreen\";\nimport RangeDates from \"../../Ranges/RangeDates/js/RangeDates\";\nimport Search from \"../../Ranges/Search/js/Search\";\nimport { InitializedMyTable } from \"../../Tables/IntitializeMyTable\";\nimport { getDates } from \"../../Tools/tools\";\nimport './../css/InfoPage.css'\n\nfunction InfoPage(props){\n\n    const[usersInfo, setUsersInfo] = useState([]);\n    const[listOfUsers, setListOfUsers] = useState([]);\n    const[search, setSearch] = useState(null);\n    const[dates, setDates] = useState(getDates());\n    const[table, setTable] = useState(<LoadingScreen />);\n\n    useEffect(() => {\n        \n        if(usersInfo.length == 0){\n\n            let datas = {\n                accessToken: props.accessToken,\n                dates: dates\n            }\n    \n            invoke('GetInfo', datas).then(promise => {\n                setUsersInfo(promise);\n            });\n        }\n    });\n    \n    useEffect(() => {\n        \n        setListOfUsers(usersInfo);\n       \n    }, [usersInfo]);\n    \n    return (\n        <div>\n            <RangeDates dates={dates} setDates={setDates} search={search} accessToken={props.accessToken} setUsersInfo={setUsersInfo}/>\n            <Search usersInfo={usersInfo} setSearch={setSearch} listOfUsers={listOfUsers} setListOfUsers={setListOfUsers}/>\n            <InitializedMyTable macket={listOfUsers}/>\n        </div>\n    )\n}\n\nexport default InfoPage;","\nexport function isAccountIdExistInList(listOfUsers, user){\n\n    let isAccountIdExist = false;\n\n    if(listOfUsers.length === 0){\n\n        return isAccountIdExist;\n    }\n\n    listOfUsers.foreach(currentUser => {\n\n        if(currentUser.user.accountId === user.user.accountId){\n            isAccountIdExist = true;\n        }\n    });\n\n    return isAccountIdExist;\n}\n\nexport function showUserInfo(user){\n     \n    console.log(user);\n    user.workspaces.foreach(workspace => {\n        workspace.repositoriesName.foreach(repositoryName => {\n            console.log(repositoryName);\n        })\n    });\n}\n\nexport function showUsersInfo(users){\n\nusers.foreach(user => {\n    showUserInfo(user);\n});\n}\n\nexport function getIdenticalAndUnIndenticalUsers(searchedListOfUsers, listOfUsers){\n    \n    let users = {\n        existingUsers: null,\n        unExistingUsers: null\n    }\n\n    let existingUsers = [];\n    let unExistingUsers = [];\n    \n    listOfUsers.foreach(currentUser => {\n        \n        let isUserExist = false;\n        \n            searchedListOfUsers.foreach(user => {\n\n            if(user.user.accountId === currentUser.user.accountId){\n                isUserExist = true;\n            }\n        })\n\n        if(isUserExist === true){\n            existingUsers.push(JSON.parse(JSON.stringify(currentUser)));\n        }\n        else{\n            unExistingUsers.push(JSON.parse(JSON.stringify(currentUser)));\n        }\n    });\n\n    users.existingUsers = existingUsers;\n    users.unExistingUsers = unExistingUsers;\n    \n    return users;\n}\n\nexport function getAllUsers(infoUsersJira){\n\n    let allUsers = [];\n\n    infoUsersJira.users.foreach(curentUser => {\n\n        allUsers.push(JSON.parse(JSON.stringify(curentUser)));\n    })\n\n    return allUsers;\n\n}\nexport function countActionsbyUser(user, determinate){\n\n    let num = 0;\n\n    if (determinate === 'commits' || determinate === 'pullRequests') {\n        num = countActionsCommitsOrPullRequests(user, determinate);\n    }\n\n    if (determinate === 'comments') {\n        num = countActionComments(user, determinate);\n    }\n\n    return num;\n}\n\nfunction countActionComments(user){\n\n    let num = 0;\n\n    user.commentInfo.foreach(comment => {\n        num = num + comment.numOfComments;\n    });\n\n    return num;\n}\nexport function countActionsCommitsOrPullRequests(user, determinate){\n\n    let typeOfAction = null;\n  \n    let num = 0;\n\n    user.workspaces.foreach(workspace => {\n        workspace.repositoriesName.foreach(repository => {\n            repository.actions.foreach(action => {\n\n                if(determinate === 'pullRequests'){\n                    typeOfAction = action.numOfPullRequests;\n                }\n\n                if(determinate === 'commits'){\n                    typeOfAction = action.numOfCommits;\n                }\n\n                num = num + typeOfAction;\n            });\n        });\n    });\n\n    return num;\n}\n\nfunction getAllUsersInfoFromJira(allUsers, infoUsersJira){\n\n\n    infoUsersJira.comments.foreach(user => {\n       \n        allUsers.foreach(currentUser => {\n\n            if(currentUser.user.accountId === user.user.accountId){\n                \n                currentUser.jira = [];\n                currentUser.jira.push({\n\n                    projects: user.projects,\n                    comments: user.commentInfo\n                });\n            }\n        });\n\n    });\n\n    return allUsers;\n}\n\nexport function getIsExistInfo(comparedUser, soughtUser) {\n\n    let isExistInfo = {\n         isAccountIdExist: false,\n         isWorkspaceExist: false,\n         isRepositoryNameExist: false,\n    }\n\n    soughtUser.workspaces.foreach(sougthWorkspace => {\n         sougthWorkspace.repositoriesName.foreach(sougthRepositoryName => {\n\n              comparedUser.workspaces.foreach(currentComparedWorkspace => {\n                   currentComparedWorkspace.repositoriesName.foreach(currentComparedRepositoryName => {\n\n                        if(soughtUser.user.accountId === comparedUser.user.accountId){\n                             isExistInfo.isAccountIdExist = true;\n\n                             if(sougthWorkspace.workspaceName === currentComparedWorkspace.workspaceName){\n                                  isExistInfo.isWorkspaceExist = true;\n\n                                  if(sougthRepositoryName.repositoryName === currentComparedRepositoryName.repositoryName){\n                                       isExistInfo.isRepositoryNameExist = true;\n                                  }\n                             }\n                        }\n                   });\n              });\n         });\n    });\n        \n    return isExistInfo;\n}\n\nexport function getDates(){\n\n    let date = new Date();\n    \n    let year = date.getFullYear()\n    let month = date.getMonth();\n    \n    if(month < 10){\n        month =  month + 1;\n        month = '0' + month\n    }\n\n    let endDay = null;\n\n    if(month === '02' || month === '04' || month === '06' || month === '09' || month === '11'){\n\n        endDay = '30';\n    }\n    else{\n        endDay = '31';\n    }\n    \n\n    let dates = {\n        start: year + '-' + month + '-' + '01',\n        end: year + '-' + month + '-' + endDay\n    }\n\n    return dates;\n}","import { invoke } from '@forge/bridge';\nimport {Base64} from 'js-base64';\nimport React from 'react';\n\nimport './../css/OAuth.css'\n\nfunction OAuth(props){\n    \n    const onSubmitAuthorize = async () => {\n        \n        let email = document.getElementById('email').value;\n        let password = document.getElementById('password').value;\n        \n        let basicToken = \"Basic \" + Base64.btoa(email + \":\" + password);\n        \n        props.setUserBasicToken(basicToken);\n    };\n\n    return(\n        <div class=\"main-form\">\n\n        <div class=\"label\">\n            <h1>Actions Of Emplyees</h1>\n                <text>Login</text>\n            </div>\n            \n            <form class=\"box\">\n\n                <div class=\"inputs\">\n                    <i class=\"fas fa-user\"></i>\n                    <input id=\"email\" type=\"email\" name=\"\" placeholder=\"email\"></input>\n                </div>\n\n                <div class=\"inputs\">\n                    <i class=\"fas fa-lock\"></i>\n                    <input id=\"password\" type=\"password\" name=\"\" placeholder=\"Password\"></input>\n                </div>\n\n                <button class=\"reg-button\" onClick={onSubmitAuthorize}>submit</button>\n\n            </form>\n      </div>\n    )\n}\n\nexport default OAuth;","import React from 'react';\nimport OAuth from '../../OAuth/js/OAuth';\n\nimport '../css/LogInForm.css'\n\nfunction LogInForm(props){\n    \n    return (\n        <form id='mainLabel'>\n            {/* <img \n                id='labelBitBucket'\n                src='https://upload.wikimedia.org/wikipedia/commons/f/fc/Bitbucket_Logo.png'\n                >\n            </img> */}\n\n            <OAuth setUserBasicToken={props.setUserBasicToken}/>\n            \n        </form>\n    )\n}\n\nexport default LogInForm;","import LogInForm from \"../../../LabelLog-in/LogInForm/jss/LogInForm\";\n\nimport './../css/UnAuthorzed.css'\n\nfunction UnAuthorized(props){\n\n    const onSubmit = async () => {\n\n        props.setLabel(<LogInForm setUserBasicToken={props.setUserBasicToken} />);\n    }\n\n    return(\n        <form id='message'>\n            <text >\n                <h1 id='NotAuthorized'>Not Authorized</h1>\n            </text>\n            <p></p>\n            <button id='button' onClick={onSubmit}>try again</button>\n        </form>\n    )\n}\n\n\n\nexport default UnAuthorized;","import { invoke } from '@forge/bridge';\nimport React, { Suspense, useEffect, useState } from 'react';\nimport InfoPage from './infoPage/js/InfoPage'\nimport LogInForm from './LabelLog-in/LogInForm/jss/LogInForm';\nimport Authorized from './MessagesInfo/Authorized/js/Authorzed';\nimport AwaitAuthorizing from './MessagesInfo/AwaitAuthorizing/js/AwaitAuthorizing';\nimport UnAuthorized from './MessagesInfo/UnAuthorized/js/UnAuthorized';\nimport LoadingScreen from './LoadingScreen/js/LoadingScreen';\n\n\nfunction Page(){\n\n    \n    const[userBasicToken, setUserBasicToken] = useState(localStorage.getItem('token'));\n    \n    const[label, setLabel] = useState(<h1>await</h1>);\n    \n    const[status, setStatus] = useState(null);\n    \n    const[accessToken, setAccessToken] = useState(null);\n\n    useEffect(() => {\n\n        if (accessToken != null) {\n    \n            setLabel( <InfoPage accessToken={accessToken} />);\n        }\n    },[accessToken]);\n    \n    useEffect(() => {\n\n        if (userBasicToken === null) {\n            setLabel(<LogInForm setUserBasicToken={setUserBasicToken} />);\n            return;\n        }\n        \n        invoke('checkIsAuthorized', userBasicToken).then(res => {\n            setAccessToken(res.code);\n            setStatus(res.status);\n        });\n\n        setLabel(<LoadingScreen />);\n\n    }, [userBasicToken]);\n    \n    useEffect(() => {\n\n        if(status === 200 && localStorage.getItem('token') === null){\n\n            localStorage.setItem(\"token\", userBasicToken);\n        }\n\n        if (status === 401) {\n\n            setLabel(\n                <UnAuthorized setLabel={setLabel} userBasicToken={userBasicToken}/>\n            )\n        }\n\n    }, [status])\n\n    return label\n\n}\n\n\nexport default Page;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport '@atlaskit/css-reset';\nimport Page from './Authorize';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Page />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}